@mixin sap($time) {
	$star-size: random(
			$limit: 5,
		) + px;
	$star-position-top: random(
		$limit: 100,
	);
	$star-position-left: random(
		$limit: 100,
	);

	$blink-time: random(
		$limit: 1000,
	);
	$blink-daley: random(
		$limit: 1000,
	);

	transform: translate(clamp(2vw, #{$star-position-left * 1vw}, 98vw), clamp(2vh, #{$star-position-top * 1vh}, 98vh));

	width: #{"max(2px,#{$star-size})"};
	height: #{"max(2px,#{$star-size})"};

	animation-duration: #{$blink-time + $time * 100 + ms};
	animation-delay: #{$blink-daley + $time * 100 + ms};
}

.main {
	--gradient: linear-gradient(45deg, var(--clr-main), var(--clr-forward));
	--alpha: 0.5;

	display: grid;
	place-items: center;

	width: 100vw;
	height: 100vh;

	//* Container of title and links
	&__ctnr {
		display: grid;
		place-items: center;
		gap: 1rem;

		padding: 12rem 10rem;

		&:hover .main__title::before {
			transform: scaleX(1);
		}

		&::before {
			$before-size: 30rem;

			content: "";
			position: absolute;
			inset: 0;
			backdrop-filter: blur(2px);

			border: 10px solid;
			border-image-slice: 1;
			border-width: 5px;
			border-image-source: var(--gradient);
			margin: auto;

			width: $before-size;
			height: $before-size;

			animation: rotation 16000ms ease-in-out infinite;
		}
	}

	&__title {
		position: relative;
		margin-top: 0;
		margin-bottom: 1rem;

		&::before {
			content: "";
			position: absolute;
			top: 100%;
			inset-inline: 0;

			height: 2px;

			background-image: var(--gradient);
			transform-origin: left;
			transform: scaleX(0);
			transition: transform 300ms ease-in;
		}
	}

	&__link {
		$link-width: 12rem;

		position: relative;
		isolation: isolate;

		border-radius: var(--border-radius);
		padding-block: 0.75rem;
		outline: 1px solid var(--clr-background);
		outline-offset: -2px;

		width: $link-width;

		text-align: center;
		background-color: var(--clr-background);
		background-image: var(--gradient);

		cursor: pointer;

		transition: width 150ms ease-in;

		&:hover {
			width: #{$link-width + 0.75};
			animation: vibration 500ms cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
			transform: translate3d(0, 0, 0);
			backface-visibility: hidden;
			perspective: 1000px;
		}

		&::selection {
			background-color: transparent;
		}
	}
}

.stars {
	position: absolute;
	inset: 0;

	z-index: -1;

	&__dot {
		border-radius: 50%;
		background-color: var(--clr-text);

		&::before,
		&::after {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			border-radius: inherit;
			background-color: inherit;

			animation: blink ease-out infinite;
		}

		// From 1 to the amount of div.stars
		@for $i from 1 to 50 {
			$time: 20;

			//* Need to be repeated 2 times to be really random

			&:nth-child(#{$i})::before {
				@include sap($time);
			}

			&:nth-child(#{$i})::after {
				@include sap($time);
			}
		}
	}
}

@keyframes blink {
	0% {
		opacity: 1;
	}

	100% {
		opacity: 0;
	}
}

@keyframes rotation {
	0%,
	100% {
		transform: rotate(0);
	}

	50% {
		transform: rotate(360deg);
	}
}

@keyframes vibration {
	10%,
	90% {
		transform: translate3d(-1px, 0, 0);
	}

	20%,
	80% {
		transform: translate3d(2px, 0, 0);
	}

	30%,
	50%,
	70% {
		transform: translate3d(-3px, 0, 0);
	}

	40%,
	60% {
		transform: translate3d(3px, 0, 0);
	}
}
